// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Graph /> render renders provided edges and vertices 1`] = `
<Digraph
  className=""
  classNamePrefix="plexus"
  edges={
    Array [
      Object {
        "from": "key0",
        "to": "key1",
      },
      Object {
        "from": "key1",
        "to": "key2",
      },
    ]
  }
  layers={
    Array [
      Object {
        "key": "nodes/find-emphasis/vector-outline",
        "layerType": "svg",
        "renderNode": [Function],
      },
      Object {
        "key": "nodes/find-emphasis/html",
        "layerType": "html",
        "renderNode": [Function],
      },
      Object {
        "key": "nodes/find-emphasis/vector-color-band",
        "layerType": "svg",
        "renderNode": [Function],
      },
      Object {
        "key": "nodes/vector-border",
        "layerType": "svg",
        "renderNode": [Function],
      },
      Object {
        "defs": Array [
          Object {
            "localId": "arrow",
          },
          Object {
            "localId": "arrow-hovered",
            "setOnEntry": Object {
              "className": "DdgArrow is-pathHovered",
            },
          },
        ],
        "edges": true,
        "key": "edges",
        "layerType": "svg",
        "markerEndId": "arrow",
        "setOnContainer": Array [
          [Function],
          Object {
            "stroke": "#444",
            "strokeWidth": 0.7,
          },
        ],
        "setOnEdge": undefined,
      },
      Object {
        "key": "nodes/content",
        "layerType": "html",
        "measurable": true,
        "measureNode": [Function],
        "renderNode": [Function],
      },
    ]
  }
  layoutManager={
    LayoutManager {
      "_handleUpdate": [Function],
      "coordinator": Coordinator {
        "_handleVizWorkerError": [Function],
        "_handleVizWorkerMessage": [Function],
        "_handleVizWorkerMessageError": [Function],
        "busyWorkers": Array [],
        "callback": [Function],
        "currentLayout": null,
        "idleWorkers": Array [],
        "nextWorkerId": 0,
      },
      "layoutId": 0,
      "options": Object {
        "rankdir": "TB",
        "splines": "polyline",
        "useDotEdges": true,
      },
      "pendingResult": null,
    }
  }
  measurableNodesKey="nodes/content"
  minimap={true}
  minimapClassName="u-miniMap"
  vertices={
    Array [
      Object {
        "key": "key0",
      },
      Object {
        "key": "key1",
      },
      Object {
        "key": "key2",
      },
      Object {
        "key": "key3",
      },
      Object {
        "key": "key4",
      },
      Object {
        "key": "key5",
      },
      Object {
        "key": "key6",
      },
      Object {
        "key": "key7",
      },
      Object {
        "key": "key8",
      },
      Object {
        "key": "key9",
      },
    ]
  }
  zoom={true}
/>
`;
